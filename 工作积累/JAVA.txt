Base.class.isAssignableFrom(obj[j].getClass())//判断是否是Bean


Map<Integer, List<Integer>> resIds = this.dao.queryMap("partdesign.calResAll",
		new RmapListInt("wprocessid", "productresourceid"));// 所有的资源ID
				
读取json文件				
try {
	org.springframework.core.io.Resource res = new ClassPathResource(
			"/resources/system/menus.x");
	menu = this.json.getter().readValue(res.getFile(), Menu[].class);
} catch (IOException e) {
	sys.error("读取系统菜单失败;", e);
}

/**
 * 使用 Map按key进行排序
 * 
 * @param map
 * @return
 */
public static Map<String, List<Worktech>> sortMapByKey(Map<String, List<Worktech>> map) {
	class MapKeyComparator implements Comparator<String> {

		@Override
		public int compare(String str1, String str2) {

			return BaseUtil.parseInt(str1) - BaseUtil.parseInt(str2);
		}
	}
	if (map == null || map.isEmpty()) {
		return null;
	}

	Map<String, List<Worktech>> sortMap = new TreeMap<String, List<Worktech>>(new MapKeyComparator());

	sortMap.putAll(map);

	return sortMap;
}

数组转list
List list = Arrays.asList(arr);


参数超过2000
List<Proplan> stgTime = new ArrayList<Proplan>();// 模具的阶段信息
List<List<T>> arr = MathUtil.splitList((List<T>) search.get("ids"), 900);
for (List<T> num : arr)
	stgTime.addAll(this.dao.query("proplanmake.stgTime", num));
	
	
瑞声接口
syncComAndMould


if (!set.contains(0) && !set.contains(2) && !set.contains(3))
	bean.setTaskdstate("4");// 全部完成
else if (!set.contains(2) && !set.contains(3) && !set.contains(4))
	bean.setTaskdstate("0");// 全部未开工
else if (!set.contains(3))
	bean.setTaskdstate("2");// 除开全部完成、全部未开工，没有加工中的
else
	bean.setTaskdstate("3");
	
	
/**
 * 给Object对象添加属性
 * 
 * @param beans
 *            Object
 * @return Object 返回的页面路径
 * @throws BaseException
 * @author WenLong YE
 * @date 2018年1月2日 下午11:13:32
 */
public Object addResult(List<Object> beans) throws IllegalArgumentException, IllegalAccessException {
	Object bean = beans.get(0);// 实际bean

	// 得到类对象
	Class<?> userCla = bean.getClass();
	userCla = userCla.getSuperclass();
	/*
	 * 得到类中的所有属性集合
	 */
	Field[] fs = userCla.getDeclaredFields();
	for (int i = 0; i < fs.length; i++) {
		Field f = fs[i];
		f.setAccessible(true); // 设置些属性是可以访问的
		Object val = f.get(bean);// 得到此属性的值
		String type = f.getType().toString();// 得到此属性的类型

		sys.info("name:" + f.getName() + "\t type = " + type + "\t value = " + val);

		if (type.endsWith("boolean")) {
			f.set(bean, true); // 给属性设值
		}
	}
	return bean;
}